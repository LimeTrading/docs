"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[62],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(t),m=o,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return t?r.createElement(h,a(a({ref:n},p),{},{components:t})):r.createElement(h,a({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},378:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const i={},a="Connecting to Lime",s={unversionedId:"connection",id:"connection",title:"Connecting to Lime",description:"Establish network connection",source:"@site/docs/connection.md",sourceDirName:".",slug:"/connection",permalink:"/csharp/connection",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"csharpDirect",previous:{title:"Getting started",permalink:"/csharp/"},next:{title:"Trading",permalink:"/csharp/trading"}},c={},l=[{value:"Establish network connection",id:"establish-network-connection",level:2},{value:"Configure the proxy object",id:"configure-the-proxy-object",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Connect the trading session",id:"connect-the-trading-session",level:2}],p={toc:l};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"connecting-to-lime"},"Connecting to Lime"),(0,o.kt)("h2",{id:"establish-network-connection"},"Establish network connection"),(0,o.kt)("p",null,"To connect to your trading account you need to have the following prerequisites:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Established network connectivity to Lime data centers. This can be done in miltiple ways. You can either start a VPN using a desktop application from Cisco that we provide you, or for better latency we can establish a cross connect or an IPSEC VPN."),(0,o.kt)("li",{parentName:"ul"},"We will tell you the IP address and port of a Lime Trading Server"),(0,o.kt)("li",{parentName:"ul"},"Your account name. In FIX world it would be your SenderCompId."),(0,o.kt)("li",{parentName:"ul"},"Your Lime Direct username and password. These are only used for API or FIX connections to Lime Direct, this is not the same username and password used for portal access.")),(0,o.kt)("h2",{id:"configure-the-proxy-object"},"Configure the proxy object"),(0,o.kt)("p",null,"The first thing to do is to create an ",(0,o.kt)("inlineCode",{parentName:"p"},"IClient")," instance passing connection parameters. The object is designed to maintain the trading session, taking care of login process, re-connecting in case of connectivity issues and exchanging heartbeat messages."),(0,o.kt)("h3",{id:"constructor"},"Constructor"),(0,o.kt)("props",null,"ICallback callback"),(0,o.kt)("p",null,"Required. An instance of a class implementing ",(0,o.kt)("inlineCode",{parentName:"p"},"ICallback")," that will receive order updates"),(0,o.kt)("props",null,"string host"),(0,o.kt)("p",null,"Required. Hostname or IP address to connect to"),(0,o.kt)("props",null,"int port"),(0,o.kt)("p",null,"Required. Port to connect to. Usually ",(0,o.kt)("inlineCode",{parentName:"p"},"7001")),(0,o.kt)("props",null,"string userName"),(0,o.kt)("p",null,"Required. Username provided by Lime"),(0,o.kt)("props",null,"string password"),(0,o.kt)("p",null,"Required. Password provided by Lime"),(0,o.kt)("props",null,"ILogger logger"),(0,o.kt)("p",null,"Required. ",(0,o.kt)("inlineCode",{parentName:"p"},"Microsoft.Extensions.Logging.ILogger")," instance"),(0,o.kt)("h2",{id:"connect-the-trading-session"},"Connect the trading session"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"ConnectAsync")," method connects the ",(0,o.kt)("inlineCode",{parentName:"p"},"IClient")," instance to configured host and port, sends a login request and awaits for a successful response. The session status can be later queried by ",(0,o.kt)("inlineCode",{parentName:"p"},"IsConnected")," property."),(0,o.kt)("props",null,"long lastEventId"),(0,o.kt)("p",null,"Last known message id received from the server. Every event sent by our server during any given day has a unique incremental id. A client can request to re-send all events happened from this id until now. As a particular example, specifying ",(0,o.kt)("inlineCode",{parentName:"p"},"1")," makes the server to re-send the whole day's activity. ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),' means "do not send anything".'),(0,o.kt)("props",null,"bool cancelOnDisconnect"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"true")," instructs the Lime server to immediately cancel any active orders if session is disconnected. The client does not receive any cancel events but can be sure that no orders have left open in the market."),(0,o.kt)("props",null,"bool autoReconnect"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"true")," will instruct the library to automatically re-connect if the session is disconnected because of failed network or missing heartbeats from trading server. The library will keep trying to establish the session every 5 seconds until cancelled by the provided ",(0,o.kt)("inlineCode",{parentName:"p"},"CancellationToken"),"."),(0,o.kt)("props",null,"CancellationToken cancellationToken"),(0,o.kt)("p",null,"Standard dotnet pattern to cancel waiting on the asynchronous result"))}u.isMDXComponent=!0}}]);