"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[850],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(r),h=o,f=d["".concat(s,".").concat(h)]||d[h]||p[h]||i;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3939:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const i={},a="Authentication",c={unversionedId:"authentication/index",id:"authentication/index",title:"Authentication",description:"All requests are authenticated with tokens issued by common OAuth 2.0 compatible flow. In order to use the API, the application should be registered with us first to get your api key. Please login to your portal at https://myaccount.lime.co to get one. You will receive an clientid and a clientsecret. We support two authorization flows suitable for different scenarios. The password type is short and simple to be used by users trading directly on their account. The authorization_code type is longer and more complicated but allows third parties to get authorized access to client accounts. For security reasons, the third party applications will need to add one or more callback urls to the whitelist on our side first.",source:"@site/docs/1-authentication/index.md",sourceDirName:"1-authentication",slug:"/authentication/",permalink:"/trader/authentication/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"limeTraderSidebar",previous:{title:"Introduction",permalink:"/trader/"},next:{title:"Password flow",permalink:"/trader/authentication/password-flow"}},s={},l=[],u={toc:l};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"authentication"},"Authentication"),(0,o.kt)("p",null,"All requests are authenticated with tokens issued by common OAuth 2.0 compatible flow. In order to use the API, the application should be registered with us first to get your api key. Please login to your portal at ",(0,o.kt)("a",{parentName:"p",href:"https://myaccount.lime.co"},"https://myaccount.lime.co")," to get one. You will receive an ",(0,o.kt)("inlineCode",{parentName:"p"},"client_id")," and a ",(0,o.kt)("inlineCode",{parentName:"p"},"client_secret"),". We support two authorization flows suitable for different scenarios. The ",(0,o.kt)("inlineCode",{parentName:"p"},"password")," type is short and simple to be used by users trading directly on their account. The ",(0,o.kt)("inlineCode",{parentName:"p"},"authorization_code")," type is longer and more complicated but allows third parties to get authorized access to client accounts. For security reasons, the third party applications will need to add one or more callback urls to the whitelist on our side first."),(0,o.kt)("p",null,"Successful authentication issues a security token that needs to be specified with every authenticated request in the Authentication HTTP header: ",(0,o.kt)("inlineCode",{parentName:"p"},"Authentication: Bearer {token goes here}")))}p.isMDXComponent=!0}}]);